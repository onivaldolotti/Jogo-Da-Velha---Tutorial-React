{"version":3,"sources":["index.js"],"names":["Square","props","className","style","fill","backgroundColor","onClick","value","Board","i","this","squares","rows","cols","resultRows","contador","push","j","renderSquare","renderBoard","React","Component","Game","state","history","Array","row","col","xIsNext","stepNumber","sortable","slice","length","alert","calculateWinner","setState","concat","step","status","current","resCalculate","moves","map","move","desc","fontWeight","jumpTo","winner","forEach","square","index","lines","includes","handleClick","reverse","sortMoves","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4895cf94.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return(\r\n        <button className=\"square\" style ={props.fill? {backgroundColor: 'red'}: null} onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                key={i}\r\n                value={this.props.squares[i]}\r\n                fill={this.props.fill[i]}\r\n                onClick={ ()=> this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderBoard(rows, cols) {\r\n        rows = 3;\r\n        cols = 3;\r\n        let resultRows = [];\r\n        let contador =0;\r\n\r\n        for (let i = 0; i<rows; i++) {\r\n            resultRows.push(\r\n                <div className=\"board-row\" key={i + 'board'}>\r\n                </div>\r\n            );\r\n\r\n            for(let j = 0; j< cols; j++) {\r\n                resultRows.push(\r\n                    this.renderSquare(contador)\r\n                )\r\n                contador++;\r\n            }\r\n        }\r\n\r\n        return resultRows;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div> {this.renderBoard()}</div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n                row : 0,\r\n                col : 0,\r\n            }],\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n            sortable: 'asc',\r\n        }\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber +1);\r\n        const current = history[history.length -1];\r\n        const squares = current.squares.slice();\r\n        let row;\r\n        let col;\r\n\r\n        switch (i) {\r\n            case 0:\r\n            case 1:\r\n            case 2:\r\n                row = 1;\r\n                break;\r\n            case 3:\r\n            case 4:\r\n            case 5:\r\n                row = 2;\r\n                break;\r\n            case 6:\r\n            case 7:\r\n            case 8:\r\n                row =3;\r\n                break;\r\n            default:\r\n                alert('Linha invalida');\r\n        }\r\n\r\n        switch (i) {\r\n            case 0:\r\n            case 3:\r\n            case 6:\r\n                col = 1;\r\n                break;\r\n            case 1:\r\n            case 4:\r\n            case 7:\r\n                col = 2;\r\n                break;\r\n            case 2:\r\n            case 5:\r\n            case 8:\r\n                col =3;\r\n                break;\r\n            default:\r\n                alert('Coluna invalida');\r\n        }\r\n\r\n        if(calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares : squares,\r\n                row: row,\r\n                col: col,\r\n            }]),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n           stepNumber: step,\r\n           xIsNext: (step % 2) === 0,\r\n        });\r\n    }\r\n\r\n    sortMoves() {\r\n        if(this.state.sortable === 'asc') {\r\n            this.setState( {\r\n                sortable: 'desc'\r\n            })\r\n        }\r\n\r\n        if(this.state.sortable === 'desc') {\r\n            this.setState( {\r\n                sortable: 'asc'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const resCalculate = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ? \"Go to move # \" + move : \"Go to game start\";\r\n            const row = this.state.history[move].row;\r\n            const col = this.state.history[move].col;\r\n            return (\r\n               <ol key={move}>\r\n                   <button style={this.state.stepNumber === move ?{fontWeight: 'bold'} : {fontWeight: 'normal'}} onClick={() => this.jumpTo(move)}>{`${desc} - Linha: ${row} - Coluna: ${col}`}</button>\r\n               </ol>\r\n            )\r\n    });\r\n\r\n    let status;\r\n    let fill = Array(9).fill(false);\r\n\r\n    if (resCalculate) {\r\n        status = `Winner ${resCalculate.winner}`;\r\n        current.squares.forEach((square,index) => {\r\n            fill[index] = resCalculate.lines.includes(index);\r\n            // resCalculate.lines.forEach(value => {\r\n            //    if(value === index) {\r\n            //        fill[index] = true;\r\n            //    }\r\n            // });\r\n        })\r\n    } else {\r\n        status = `Next player: ${this.state.xIsNext ? \"X\" : \"O\"}`;\r\n\r\n        if(moves.length === 10) {\r\n            status = `Draw`;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <div className=\"game-board\">\r\n                <Board\r\n                    squares = {current.squares}\r\n                    fill = {fill}\r\n                    onClick = {(i) => this.handleClick(i)}\r\n                />\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <div>{ status }</div>\r\n                <ol>{this.state.sortable === 'asc'? moves : moves.reverse()}</ol>\r\n                <button onClick={()=>this.sortMoves()}>Sort moves</button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return {'winner':squares[a], 'lines':lines[i]};\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n"],"sourceRoot":""}